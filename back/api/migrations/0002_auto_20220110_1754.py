# Generated by Django 3.2.11 on 2022-01-10 17:54

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField()),
                ('created', models.DateTimeField()),
                ('name', models.CharField(max_length=32, unique=True)),
                ('group', models.CharField(max_length=32)),
                ('logo', models.URLField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AddField(
            model_name='user',
            name='is_confirmed',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.CreateModel(
            name='SSHKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('pub', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('version', api.models.VersionField(max_length=16)),
                ('image_name', models.CharField(max_length=64)),
                ('image_tag', models.CharField(max_length=16)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='api.service')),
            ],
        ),
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('token', models.CharField(max_length=32)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_by', to='api.serviceversion')),
                ('requiring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requires', to='api.serviceversion')),
            ],
            options={
                'unique_together': {('requiring', 'required')},
            },
        ),
        migrations.CreateModel(
            name='ServiceConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflicted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_with', to='api.serviceversion')),
                ('conflicting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts', to='api.serviceversion')),
            ],
            options={
                'unique_together': {('conflicting', 'conflicted')},
            },
        ),
    ]
